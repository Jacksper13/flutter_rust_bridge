name: CI

on:
  push:
    branches:
      - master
  pull_request: { }
  workflow_dispatch: { }

env:
  CARGO_TERM_COLOR: always
  FRB_MAIN_RUST_VERSION: 1.84.0
  FRB_MAIN_DART_VERSION: 3.6.2
  FRB_MAIN_FLUTTER_VERSION: 3.27.4

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  test_dart_sanitizer:
    name: 'Test :: Dart :: Sanitizer'
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        sanitizer:
          - asan
        package:
          - frb_example--dart_minimal

    steps:
      # setup
      - uses: catchpoint/workflow-telemetry-action@v1
        with:
          comment_on_pr: false
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ env.FRB_MAIN_RUST_VERSION }}
          components: rustfmt
      - run: |-
          rustup toolchain install nightly
          rustup component add rust-src --toolchain nightly-x86_64-unknown-linux-gnu
      - uses: dart-lang/setup-dart@v1
        with:
          sdk: ${{ env.FRB_MAIN_DART_VERSION }}
          architecture: x64

      # execute
      - uses: mxschmitt/action-tmate@v3
        with:
          detached: true
      - name: Sleep forever
        run: sleep 1000000
